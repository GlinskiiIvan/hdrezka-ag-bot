const { Telegraf, Scenes, session, Markup } = require('telegraf');
const { enter, leave } = Scenes.Stage;
const mediaScene = require('./Scenes/media')

require('dotenv').config();

const bot = new Telegraf(process.env.BOT_TOKEN);

const stage = new Scenes.Stage([mediaScene]);

bot.use(session());
bot.use(stage.middleware());

bot.start(async(ctx) => {
  await ctx.reply(`
–ü—Ä–∏–≤–µ—Ç, ${ctx.from.first_name}!

–Ø –ø–æ–º–æ–≥—É –Ω–∞–π—Ç–∏ —Ç–µ–±–µ —Ñ–∏–ª—å–º, –º—É–ª—å—Ç–∏–∫ –∏–ª–∏ —Å–µ—Ä–∏–∞–ª—å—á–∏–∫, –¥–ª—è —ç—Ç–æ–≥–æ –Ω–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É "–Ω–∞—á–∞—Ç—å".
–í –ª—é–±–æ–π –º–æ–º–µ–Ω—Ç —Ç—ã –º–æ–∂–µ—à—å –Ω–∞—á–∞—Ç—å –ø–æ–∏—Å–∫ –∑–∞–Ω–æ–≤–æ, –¥–ª—è —ç—Ç–æ–≥–æ –æ—Ç–ø—Ä–∞–≤—å –∫–æ–º–∞–Ω–¥—É /restart.

–£–¥–∞—á–∏! –ù–∞–¥–µ—é—Å—å —Ç—ã –Ω–∞–π–¥–µ—à—å —á—Ç–æ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å.
  ` ,Markup.keyboard(['–Ω–∞—á–∞—Ç—å']).resize().oneTime())
});

bot.hears('–Ω–∞—á–∞—Ç—å', async (ctx) => {
    await ctx.scene.enter('mediaScene');
})

bot.command('restart', async (ctx) => {
  await ctx.scene.enter('mediaScene');
})

bot.command('music', async (ctx) => {
  try {
    await ctx.replyWithAudio({url: `https://hitmo1.apporange.space/get/cuts/9d/c5/9dc5fbbc34bf6be58bffa0062db07e77/66751495/Zivert_-_Credo_b128f0d184.mp3`});
  } catch (error) {
    console.log(error);
  }
})

bot.help((ctx) => ctx.reply('Send me a sticker'));
bot.on('sticker', (ctx) => ctx.reply('üëç'));
bot.hears('hi', (ctx) => ctx.reply('Hey there'));

bot.launch();

console.log('–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω!');